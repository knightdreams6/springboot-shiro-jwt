<?xml version="1.0" encoding="UTF-8"?>
<!--
说明：
    1. 文件的命名和加载顺序有关
       logback.xml早于application.yml加载，logback-spring.xml晚于application.yml加载
       如果logback配置需要使用application.yml中的属性，需要命名为logback-spring.xml
    2. logback使用application.yml中的属性
       使用springProperty才可使用application.yml中的值 可以设置默认值
-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">

    <contextName>sweet</contextName>

    <!-- 文件存放地址 -->
    <property name="INFO_LOG_HOME" value="/home/logs/info"/>
    <!-- ERROR文件存放地址 -->
    <property name="ERROR_LOG_HOME" value="/home/logs/error"/>
    <!-- 文件备份地址 -->
    <property name="LOG_BACK_HOME" value="/home/logs/sweet/backup"/>

    <!-- 文件切割大小 -->
    <property name="maxFileSize" value="100MB"/>
    <!-- 文档保留天数 -->
    <property name="maxHistory" value="60"/>
    <!-- 文档保留总大小 -->
    <property name="totalSizeCap" value="10GB"/>


    <!-- INFO级别log但排除ERROR -->
    <appender name="INFO-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>

        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${INFO_LOG_HOME}/%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--  只保留30天的日志  -->
            <maxHistory>${maxHistory}</maxHistory>
            <!--  单个日志文件最多 100MB, 60天的日志周期，最大不能超过10GB  -->
            <maxFileSize>${maxFileSize}</maxFileSize>
            <totalSizeCap>${totalSizeCap}</totalSizeCap>
        </rollingPolicy>
    </appender>

    <!-- ERROR级别LOG -->
    <appender name="ERROR-LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>

        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %contextName [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${ERROR_LOG_HOME}/%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--  只保留30天的日志  -->
            <maxHistory>${maxHistory}</maxHistory>
            <!--  单个日志文件最多 100MB, 60天的日志周期，最大不能超过10GB  -->
            <maxFileSize>${maxFileSize}</maxFileSize>
            <totalSizeCap>${totalSizeCap}</totalSizeCap>
        </rollingPolicy>
    </appender>


    <!-- 异步输出INFO -->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="INFO-LOG"/>
    </appender>

    <!-- 异步输出ERROR -->
    <appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
        <!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
        <discardingThreshold>0</discardingThreshold>
        <!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
        <queueSize>256</queueSize>
        <!-- 添加附加的appender,最多只能添加一个 -->
        <appender-ref ref="ERROR-LOG"/>
    </appender>

    <root level="info">
        <appender-ref ref="ASYNC-INFO"/>
        <appender-ref ref="ASYNC-ERROR"/>
    </root>


</configuration>
